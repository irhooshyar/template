version: '3.7'
services:

    django:
        build:
            context: .
            dockerfile: ./docker/django/Dockerfile
        ports:
            - "8000:8000"
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/app
            - django_static_volume:/app/static
            - django_media_cdn_volume:/app/media_cdn
        environment:
            ES_URL: '37.156.144.109:7085'
            DB_FA_NAME: 'prod_fa'
            DB_EN_NAME: 'prod_en'
            DB_URL: '37.156.144.109'
            DB_PORT: '7084'
            LOAD_MODELS: false


#    phpmyadmin:
#        image: phpmyadmin:5.2.0
#        ports:
#            - "8080:80"
#        depends_on:
#            - tunnels
#        networks:
#            - mynetwork
#        volumes:
#            - /sessions
#            - './phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php'
#        environment:
#            PMA_ARBITRARY: 1
#            PMA_HOST: 'mysql_connector'
#            PMA_HOST: '37.156.144.109'
#            PMA_PORT: '7084'
#            PMA_USER: 'dbadmin'
#            PMA_PASSWORD: '123456789'
#        depends_on:
#            - mysql_connector


#    tunnels:
#        image: kingsquare/tunnel
#        volumes:
#          - '${SSH_AUTH_SOCK}:/ssh-agent'
#        command: '*:3306:localhost:7084 -vvv user@myserver'
#        networks:
#            mynetwork:
#                aliases:
#                    - remoteserver


#    mysql_connector:
#        build:
#            context: .
#            dockerfile: ./docker/mysql_connector/Dockerfile
#        command: "ssh -L 3306:127.0.0.1:7084 mn76@37.156.144.109 -p 22024 -N"
#        environment:
#            pass: 'm@12345'
#        restart: unless-stopped

#    mysql:
#        image: mysql/mysql-server:5.7.40
#        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#        environment:
#            MYSQL_ROOT_PASSWORD: 'root_pass'
#        volumes:
#            - mysql_prod_volume:/var/lib/mysql
#            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
#            - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d


#    phpmyadmin:
#        image: phpmyadmin:5.2.0
#        ports:
#            - "7082:80"
#        extra_hosts:
#            - "host.docker.internal:host-gateway"
#        environment:
#            PMA_ARBITRARY: 1
#            PMA_HOST: 'host.docker.internal'
##            PMA_HOST: 'mysql_prod'
#            PMA_USER: 'dbadmin'
#            PMA_PASSWORD: '123456789'
#        volumes:
#            - phpmyadmin_volume:/etc/phpmyadmin/backup
##        depends_on:
##            - mysql_prod
##        entrypoint: "./docker/wait-for-it.sh mysql_prod:5432"


#    elasticsearch_prod:
#        build: ./docker/elasticsearch/
#        volumes:
#            - ./../elasticsearch-data:/usr/share/elasticsearch/data
#            - ./elasticsearch/config:/usr/share/elasticsearch/config
#
#
#    elasticsearch_dev:
#        build: ./docker/elasticsearch/
#        ports:
#            - "9200:9200"
#            - "9300:9300"
#        volumes:
#            - ./../elasticsearch-data:/usr/share/elasticsearch/data
#            - ./elasticsearch/config:/usr/share/elasticsearch/config
#
#
#    kibana:
#        build: kibana/
#        volumes:
#            - ./kibana/config/:/opt/kibana/config/
#        ports:
#            - "5601:5601"
#        links:
#            - elasticsearch


volumes:
    django_static_volume:
    django_media_cdn_volume:

#networks:
#    mynetwork:
#        driver: bridge



